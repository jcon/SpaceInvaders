function Missle.init 0
push constant 32
pop static 0
push constant 0
pop static 4
push constant 1
pop static 5
push constant 2
pop static 6
push constant 3
pop static 7
push constant 4
pop static 8
push constant 4
pop static 3
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
push constant 1
neg
push constant 1
neg
push constant 1
neg
push constant 1
neg
call Sprites.createSprite 8
pop static 1
push constant 2321
neg
push constant 1089
neg
push constant 2017
neg
push constant 4081
neg
push constant 4081
neg
push constant 2017
neg
push constant 577
neg
push constant 2193
neg
call Sprites.createSprite 8
pop static 2
push constant 0
return
function Missle.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push constant 0
pop this 3
push static 4
pop this 0
push constant 0
pop this 1
push pointer 0
return
function Missle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Missle.getX 0
push argument 0
pop pointer 0
push this 2
push constant 8
add
return
function Missle.getY 0
push argument 0
pop pointer 0
push this 3
return
function Missle.isActive 0
push argument 0
pop pointer 0
push this 0
push static 6
eq
return
function Missle.handleShot 1
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push this 1
push local 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push static 4
eq
push local 0
push static 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 5
pop this 0
label IF_FALSE1
push local 0
pop this 1
push this 0
push static 5
eq
return
function Missle.setBlowingUp 0
push argument 0
pop pointer 0
push static 7
pop this 0
push constant 0
return
function Missle.tick 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push static 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop this 2
call Constants.getPLAYER_Y 0
pop this 3
push static 6
pop this 0
push static 1
push this 2
push this 3
call Sprites.drawSpriteXOR 3
pop temp 0
push constant 0
return
label IF_FALSE0
push this 0
push static 6
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 1
push this 2
push this 3
call Sprites.eraseSprite 3
pop temp 0
push this 3
push static 3
sub
pop this 3
push this 3
call Constants.getBOARD_START_Y 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 7
pop this 0
call Constants.getBOARD_START_Y 0
pop this 3
push constant 0
return
label IF_FALSE2
push static 1
push this 2
push this 3
call Sprites.drawSpriteXOR 3
pop local 0
push local 0
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push static 1
push this 2
push this 3
call Sprites.eraseSprite 3
pop temp 0
push static 4
pop this 0
push constant 0
not
return
label IF_FALSE3
push constant 0
return
label IF_FALSE1
push this 0
push static 7
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push static 2
push this 2
push this 3
call Sprites.drawSpriteXOR 3
pop temp 0
push static 8
pop this 0
push constant 0
return
label IF_FALSE4
push this 0
push static 8
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push static 2
push this 2
push this 3
call Sprites.eraseSprite 3
pop temp 0
push static 4
pop this 0
push constant 0
return
label IF_FALSE5
push local 0
return
