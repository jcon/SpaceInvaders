function Rack.init 0
push constant 16
pop static 0
push constant 55
pop static 1
push constant 11
pop static 2
push constant 0
return
function Rack.new 3
push constant 9
call Memory.alloc 1
pop pointer 0
call Constants.getSTART_X 0
push constant 32
add
pop this 1
push argument 0
pop this 2
push constant 0
not
pop this 4
push static 1
call Array.new 1
pop this 0
push constant 0
pop this 5
push constant 2
pop this 3
push constant 6000
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 1
lt
not
if-goto WHILE_END0
push local 1
push static 2
call Math.divide 2
pop local 2
push local 2
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
call Alien.getOCTOPUS 0
call Alien.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
add
call Alien.getOCTOPUS 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 2
push constant 4
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push this 0
add
call Alien.getCRAB 0
call Alien.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
add
call Alien.getCRAB 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push local 1
push this 0
add
call Alien.getSQUID 0
call Alien.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
add
call Alien.getSQUID 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Rack.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Alien.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Rack.draw 5
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 1
lt
not
if-goto WHILE_END0
push local 1
push static 2
call Math.divide 2
pop local 2
push local 1
push static 2
call Util.mod 2
pop local 3
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
push this 1
push local 3
push static 0
call Math.multiply 2
add
push this 2
push local 2
push static 0
call Math.multiply 2
sub
push this 4
call Alien.drawXY 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 4
not
pop this 4
push constant 0
return
function Rack.getMaxX 3
push argument 0
pop pointer 0
push constant 10
pop local 1
label WHILE_EXP0
push local 1
push constant 1
neg
gt
not
if-goto WHILE_END0
push constant 4
pop local 0
label WHILE_EXP1
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END1
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Alien.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push local 1
push static 0
call Math.multiply 2
add
push constant 16
add
return
label IF_FALSE0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Rack.getMinX 3
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 2
lt
not
if-goto WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 5
lt
not
if-goto WHILE_END1
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Alien.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push local 1
push static 0
call Math.multiply 2
add
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Rack.getRefY 5
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 0
label WHILE_EXP0
push local 4
not
push local 0
push constant 5
lt
and
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 4
not
push local 1
push static 2
lt
and
not
if-goto WHILE_END1
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Alien.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push local 0
push static 0
call Math.multiply 2
sub
pop local 2
push constant 0
not
pop local 4
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Rack.getRefX 0
push argument 0
pop pointer 0
push this 1
return
function Rack.bump 4
push argument 0
pop pointer 0
push this 7
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 6
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
push this 8
call Sprites.clearXY 2
pop temp 0
push constant 1
neg
pop this 7
push constant 1
neg
pop this 8
label IF_FALSE1
push this 6
push constant 1
add
pop this 6
label IF_FALSE0
push this 5
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push this 3
add
pop this 1
push this 4
not
pop this 4
push pointer 0
call Rack.getMaxX 1
call Constants.getEND_X 0
push constant 8
sub
push constant 1
sub
gt
push pointer 0
call Rack.getMinX 1
call Constants.getSTART_X 0
push constant 9
add
lt
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
push this 2
push constant 8
add
pop this 2
push this 1
push this 3
add
pop this 1
label IF_FALSE3
label IF_FALSE2
push constant 0
pop local 2
label WHILE_EXP0
push local 2
not
push this 5
push constant 55
lt
and
not
if-goto WHILE_END0
push this 5
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Alien.getIsAlive 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 2
goto IF_END4
label IF_FALSE4
push this 5
push constant 1
add
pop this 5
label IF_END4
goto WHILE_EXP0
label WHILE_END0
push local 2
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 5
push static 2
call Math.divide 2
pop local 0
push this 5
push static 2
call Util.mod 2
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 1
push local 1
push static 0
call Math.multiply 2
add
push this 2
push local 0
push static 0
call Math.multiply 2
sub
push constant 8
sub
push this 1
push local 1
push static 0
call Math.multiply 2
add
push constant 16
add
push this 2
push local 0
push static 0
call Math.multiply 2
sub
call Screen.drawRectangle 4
pop temp 0
push local 3
push this 1
push local 1
push static 0
call Math.multiply 2
add
push this 2
push local 0
push static 0
call Math.multiply 2
sub
push this 4
call Alien.drawXY 4
pop temp 0
push this 5
push constant 1
add
pop this 5
label IF_FALSE5
push this 5
push constant 55
call Util.mod 2
pop this 5
push constant 0
return
function Rack.handleCollision 5
push argument 0
pop pointer 0
push argument 1
push this 1
lt
push argument 1
push this 1
push static 2
push static 0
call Math.multiply 2
add
gt
or
push argument 2
push this 2
push constant 8
add
gt
or
push argument 2
push this 2
push constant 4
push static 0
call Math.multiply 2
sub
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push this 2
push local 0
push static 0
call Math.multiply 2
sub
pop local 3
push argument 2
push local 3
push constant 9
add
lt
push argument 2
push local 3
push constant 1
sub
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push static 2
lt
not
if-goto WHILE_END1
push this 1
push local 1
push static 0
call Math.multiply 2
add
pop local 2
push argument 1
push local 2
push constant 1
sub
gt
push argument 1
push local 2
push constant 17
add
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call Alien.getIsAlive 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push local 1
push static 0
call Math.multiply 2
add
pop this 7
push this 2
push local 0
push static 0
call Math.multiply 2
sub
pop this 8
push constant 0
pop this 6
push local 4
push this 7
push this 8
call Alien.drawExplosionXY 3
pop temp 0
push local 4
push constant 0
call Alien.setAlive 2
pop temp 0
push local 4
call Alien.getHitPoints 1
return
goto IF_END3
label IF_FALSE3
push constant 0
return
label IF_END3
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
